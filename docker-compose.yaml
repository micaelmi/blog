version: "3.8"
services:
  blog-postgres-db:
    profiles: [dev, prod]
    image: bitnami/postgresql:14
    container_name: blog-postgres-db
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME:-docker}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-docker}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - blog_db_volume:/bitnami/postgresql
    networks:
      - blog-network
    env_file:
      - .env

  # star-blog-api:
  #   container_name: blog-api
  #   profiles: [prod]
  #   dns:
  #     - 8.8.8.8
  #     - 8.8.4.4
  #   build: ./backend
  #   depends_on:
  #     - blog-postgres-db
  #   environment:
  #     - NODE_ENV=production
  #     - DATABASE_USERNAME=${DATABASE_USERNAME:-docker}
  #     - DATABASE_PASSWORD=${DATABASE_PASSWORD:-docker}
  #     - DATABASE_HOST=${DATABASE_HOST}
  #     - DATABASE_PORT=${DATABASE_PORT-:5432}
  #     - DATABASE_NAME=${DATABASE_NAME}
  #     - SECRET_JWT_KEY=${SECRET_JWT_KEY}
  #     - PORT=${API_PORT}
  #   ports:
  #     - "3333:3333"
  #   restart: unless-stopped
  #   networks:
  #     - blog-network
  # blog-web:
  #   container_name: blog-web
  #   profiles: [prod]
  #   dns:
  #     - 8.8.8.8
  #     - 8.8.4.4
  #   build:
  #     context: ./frontend
  #     args:
  #       # Passa as var√≠aveis com NEXT_PUBLIC como argumentos para o build
  #       NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
  #       NEXT_PUBLIC_SUPABASE_PROJECT_URL: ${NEXT_PUBLIC_SUPABASE_PROJECT_URL}
  #       NEXT_PUBLIC_SUPABASE_API_KEY: ${NEXT_PUBLIC_SUPABASE_API_KEY}
  #   command: "pnpm start"
  #   depends_on:
  #     - star-blog-api
  #   environment:
  #     - NODE_ENV=production
  #     - NEXTAUTH_URL=${NEXTAUTH_URL}
  #     - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
  #     - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
  #   ports:
  #     - "3000:3000"
  #   restart: unless-stopped
  #   networks:
  #     - blog-network

volumes:
  blog_db_volume:

networks:
  blog-network:
    driver: bridge
